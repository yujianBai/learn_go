推动系统
    千万级websocket消息推送系统服务

课程将节点在于：
    1， 弹幕系统的技术挑战
    2， 掌握WebSocket协议
    3， Go实现WebSocket服务端

    4, 千万级弹幕系统架构的密码

弹幕的技术复杂度：
    1个直播间：
        在线100万
        放送弹幕，1000条/秒
        推动频率：100万 * 1000条/秒= 10亿条/秒

    N个直播间：
        难度就更大了

拉模式和推模式的区别:
    拉模式：
        1, 数据更新频率低， 则大多数的请求是无效的
        2， 在线用户数量多，则服务端的查询负载很高
        3， 当时轮询拉取，无法满足时效性的要求
    推模式：
        1, 仅在数据更新时才需要推送
        2， 需要维护大量的在线链接
        3， 数据更新后可以立即退送

协议：
    websocket:
        浏览器支持的socket编程， 轻松维护服务端的长连接
        基于TCP可靠传输之上的协议， 无需开发者关心通讯细节
        提供了高度抽象的编程接口， 业务开发成本低

Websocket 协议与交互：
    通讯流程：
    传输原理：
        1， 协议升级后， 继续复用http的底层socket完成后续通讯
        2， message底层被切分为多个frame帧传输

        编程时只需操作messag, 无需关心frame 
        框架底层完成tcp网络I/O， websocket协议解析，开发者无需关心
        


    对于websocket协议的理解最好的方式就是抓包：
        1， 使用chrome开发者工具， 观察websocket 通讯流程

服务端的技术选型与考虑：
    NodeJS
        语言特点： 单线程模型 推送性能有限
    c/C++：
        语言特点：tcp通讯，websocket协议实现成本高（轮子非常少）
    GO语言：
        多线程， 基于协成模型并发
        成熟的websocket标准库， 无需造轮子    
       
实现http 服务端：
    websocket 是http协议Upgrade而来
    使用http标准库快速实现空接口:/WS